'use strict';

var kDartsPerTurn=3;
var kDartBoardLayout=[1,18,4,13,6,10,15,2,17,3,19,7,16,8,11,14,9,12,5,20];var 

GameEngine=function(){
function GameEngine(players,listener){babelHelpers.classCallCheck(this,GameEngine);
if(!(players instanceof Array)||players.length===0){
throw new Error("Specify at least one player");}

this._players=players;
this._currentPlayerIndex=0;
this._dartsThrown=0;
this._winner=null;
this._drinkers={};
this._tShirtChangePossible=true;
this._tShirtChangeColor=null;
this._listener=listener;}babelHelpers.createClass(GameEngine,[{key:"currentPlayer",value:function currentPlayer()


{
return this._players[this._currentPlayerIndex];}},{key:"getWinner",value:function getWinner()


{
return this._winner;}},{key:"getDrinkers",value:function getDrinkers()


{
return this._drinkers;}},{key:"addDrinker",value:function addDrinker(


player,numberOfDrinks){
var currentDrinks=this._drinkers[player.name]||0;
this._drinkers[player.name]=currentDrinks+numberOfDrinks;}},{key:"nextTurn",value:function nextTurn()


{
if(this._listener&&this._listener.willStartNextTurn){
this._listener.willStartNextTurn(
this._nextPlayer(),this._drinkers);}

this._dartsThrown=0;
this._drinkers={};
this._currentPlayerIndex=
(this._currentPlayerIndex+1)%this._players.length;}},{key:"recordThrow",value:function recordThrow(


number,factor){
var currentPlayer=this.currentPlayer();
if(currentPlayer.target===number){
this._advance(currentPlayer,factor);}else 
if(number===50){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{

for(var _iterator=this._players[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var player=_step.value;
if(player===currentPlayer){
continue;}

this.addDrinker(player,1);}}catch(err){_didIteratorError=true;_iteratorError=err;}finally {try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally {if(_didIteratorError){throw _iteratorError;}}}}else 

if(number===25){

if(this._listener&&this._listener.playerCanChoseDrinker){
this._listener.playerCanChoseDrinker();}}else 

{var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{

for(var _iterator2=this._players[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var player=_step2.value;
if(player.target===number){
this._advance(player,factor);}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally {try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally {if(_didIteratorError2){throw _iteratorError2;}}}}



this._checkForTshirtChange(this._calculateColor(number,factor));

this._dartsThrown+=1;
if(this._dartsThrown===kDartsPerTurn){
this.nextTurn();}}},{key:"_checkForTshirtChange",value:function _checkForTshirtChange(



color){
if(!this._tShirtChangePossible){
return;}

if(this._tShirtChangeColor===null){
this._tShirtChangeColor=color;}else 
if(this._tShirtChangeColor!==color){
this._tShirtChangePossible=false;}}},{key:"_calculateColor",value:function _calculateColor(



number,factor){}},{key:"_advance",value:function _advance(



player,factor){
var previousTargetIndexOnBoard=kDartBoardLayout.indexOf(player.target);
var newTargetIndexOnBoard=previousTargetIndexOnBoard+factor;
if(newTargetIndexOnBoard>=20){
this._winner=player;
if(this._listener&&this._listener.playerDidWin){
this._listener.playerDidWin(player);}}else 

{
player.target=kDartBoardLayout[newTargetIndexOnBoard];}

this.addDrinker(this._nextPlayer(player),factor);}},{key:"_nextPlayer",value:function _nextPlayer(


currentPlayer){
if(!currentPlayer){
currentPlayer=this.currentPlayer();}

var index=this._players.indexOf(currentPlayer);
return this._players[(index+1)%this._players.length];}}]);return GameEngine;}();



module.exports=GameEngine;